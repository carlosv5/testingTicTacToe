node {
stage ('Checkout') {
    IP = sh(returnStdout: true, script: "docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' codeurjc-forge-gerrit").trim()
    git url: "http://" + IP + ":8080/TicTacToe"
}

stage ('Unit and System test') {
    sh 'chmod -R 777 /var/jenkins_home/workspace/Merge@2/?/.m2/repository/webdriver/chromedriver/'
     docker.image('maven:3-jdk-8-alpine').inside('-v $HOME/.m2:/root/.m2 '
     +'-v /var/run/docker.sock:/var/run/docker.sock') {
        sh 'rm target/*.flv || true'
        sh 'mvn package -Dmaven.test.failure.ignore=true -Dtest=BoardParametrizedTest,TicTacToeGameTest, WebAppSeleniumSystemTest test'     }
     step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
        archiveArtifacts artifacts: 'target/*.flv'
 }

 stage ('Create Docker image') {
     sh 'cp Jenkins/Dockerfile_Nightly target/DockerFile'
     sh './Jenkins/build_nightly.sh'
 }
 
 stage ('System Test') {
//TO-DO
 }

 stage ('Push Docker image to DockerHub') {
     sh 'docker tag testingupmforge/tictactoe:latest testingupmforge/tictactoe:nightly'
     sh 'docker login -u="testingupmforge" -p="carl*sys3rgi*123"'
     sh 'docker push testingupmforge/tictactoe:dev'
 }
}

