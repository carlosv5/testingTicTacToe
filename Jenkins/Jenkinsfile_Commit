node {
stage ('Checkout') {
    IP = sh(returnStdout: true, script: "docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' codeurjc-forge-gerrit").trim()
    checkout([$class: 'GitSCM', branches: [[name:'FETCH_HEAD']],
     userRemoteConfigs: [[refspec: env.GERRIT_REFSPEC,  url: 'http://' + IP + ':8080/TicTacToe']]])
}

 stage ('Unit test') {
     docker.image('maven:3-jdk-8-alpine').inside('-v $HOME/.m2:/root/.m2 '
     +'-v /var/run/docker.sock:/var/run/docker.sock') {
        sh 'mvn -Dmaven.test.failure.ignore=true -Dtest=BoardParametrizedTest,TicTacToeGameTest test'     }
     step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
 }
}
