node {
stage ('Checkout') {
    IP = sh(returnStdout: true, script: "docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' codeurjc-forge-gerrit").trim()
    git url: "http://" + IP + ":8080/TicTacToe"
}

stage ('Remove snapshot tag') {
     docker.image('maven:3-jdk-8-alpine').inside('-v $HOME/.m2:/root/.m2 ') {
        VERSION = sh(returnStdout: true, script: "grep version pom.xml | grep SNAP | cut -c11-15").trim()
        VERSIONSNAP = sh(returnStdout: true, script: "grep version pom.xml | grep SNAP | cut -c11-24").trim()
        sh 'cp pom.xml pom.xml_bk'
        sh 'sed -i "s/-SNAPSHOT//" pom.xml'
        }
 }

stage ('Unit and System test') {
     docker.image('maven:3-jdk-8-alpine').inside('-v $HOME/.m2:/root/.m2 '
     +'-v /var/run/docker.sock:/var/run/docker.sock') {
        sh 'rm target/*.flv || true'
        sh 'mvn package -Dmaven.test.failure.ignore=true -Dtest=BoardParametrizedTest,TicTacToeGameTest,WebAppSeleniumSystemTest test' }
     step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
        archiveArtifacts artifacts: 'target/*.flv'
 }

 stage ('Create and push Docker image') {
    sh 'cp Jenkins/Dockerfile_Nightly target/Dockerfile'
    sh 'docker build -t testingupmforge/tictactoe:latest ./target/.'
    sh 'docker tag testingupmforge/tictactoe:latest testingupmforge/tictactoe:' + VERSION
    sh 'docker login -u="testingupmforge" -p="carl*sys3rgi*123"'
    sh'docker push testingupmforge/tictactoe:' +VERSION
 }

 stage ('Push latest') {
    sh'docker push testingupmforge/tictactoe:latest'
 }
 
 stage ('Gerrit tag') {
 }
 
stage ('Update POM with parameter') {
     docker.image('maven:3-jdk-8-alpine').inside('-v $HOME/.m2:/root/.m2 ') {
        sh 'sed -i "s/'+VERSIONSNAP+'/'+version+'-SNAPSHOT/" pom.xml_bk'
        sh 'less pom.xml_bk | grep SNAP'
        sh 'mv pom.xml_bk pom.xml'
        }
 }
 

}


